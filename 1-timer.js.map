{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst dateTimePicker = document.querySelector(\"#datetime-picker\");\nconst startButton = document.querySelector(\"[data-start]\");\nconst daysElement = document.querySelector(\"[data-days]\");\nconst hoursElement = document.querySelector(\"[data-hours]\");\nconst minutesElement = document.querySelector(\"[data-minutes]\");\nconst secondsElement = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      window.alert(\"Please choose a date in the future\");\n      startButton.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\nstartButton.addEventListener(\"click\", () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  timerInterval = setInterval(() => {\n    const timeDifference = userSelectedDate - new Date();\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(convertMs(timeDifference));\n  }, 1000);\n});\n"],"names":["dateTimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","timerInterval","options","selectedDates","selectedDate","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","timeDifference"],"mappings":"wIAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,IAAIC,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtB,OAAO,MAAM,oCAAoC,EACjDT,EAAY,SAAW,KAEvBK,EAAmBI,EACnBT,EAAY,SAAW,GAE1B,CACH,EAEAU,EAAUX,EAAgBQ,CAAO,EAEjC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Df,EAAY,YAAcgB,EAAeJ,CAAI,EAC7CX,EAAa,YAAce,EAAeH,CAAK,EAC/CX,EAAe,YAAcc,EAAeF,CAAO,EACnDX,EAAe,YAAca,EAAeD,CAAO,CACrD,CAEAhB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BO,EAAgB,YAAY,IAAM,CAChC,MAAMc,EAAiBf,EAAmB,IAAI,KAE9C,GAAIe,GAAkB,EAAG,CACvB,cAAcd,CAAa,EAC3Ba,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEpB,EAAe,SAAW,GAC1B,MACD,CAEDoB,EAAmBR,EAAUS,CAAc,CAAC,CAC7C,EAAE,GAAI,CACT,CAAC"}